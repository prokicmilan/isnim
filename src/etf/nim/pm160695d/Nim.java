/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package etf.nim.pm160695d;

import java.awt.Button;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.util.List;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.ComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author Proka
 */
public class Nim extends java.awt.Frame {

    /**
     * Creates new form Nim
     */
    public Nim() {
        initComponents();
        cmbListener = new ComboListener();
        btnListener = new ButtonListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newGameDialog = new javax.swing.JDialog();
        numPiles = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        numDiscs = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        computerPlayerButton1 = new javax.swing.JRadioButton();
        humanPlayerButton1 = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        computerPlayerButton2 = new javax.swing.JRadioButton();
        humanPlayerButton2 = new javax.swing.JRadioButton();
        difficulty1 = new javax.swing.JSlider();
        difficultyLabel1 = new javax.swing.JLabel();
        difficulty2 = new javax.swing.JSlider();
        difficultyLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        player1Group = new javax.swing.ButtonGroup();
        player2Group = new javax.swing.ButtonGroup();
        pilesDialog = new javax.swing.JDialog();
        pilesPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        computerDialog = new javax.swing.JDialog();
        jLabel7 = new javax.swing.JLabel();
        aiType1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        aiType2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        newGame = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        turnLabel = new javax.swing.JLabel();
        btnPanel = new javax.swing.JPanel();

        newGameDialog.setMinimumSize(new java.awt.Dimension(530, 260));

        numPiles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        numPiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numPilesActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Broj stubova:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Maksimalan broj diskova na stubu:");

        numDiscs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        numDiscs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numDiscsActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Igrac 1:");

        player1Group.add(computerPlayerButton1);
        computerPlayerButton1.setSelected(true);
        computerPlayerButton1.setText("Racunar");
        computerPlayerButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computerPlayerButton1ActionPerformed(evt);
            }
        });

        player1Group.add(humanPlayerButton1);
        humanPlayerButton1.setText("Covek");
        humanPlayerButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                humanPlayerButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Igrac 2:");

        player2Group.add(computerPlayerButton2);
        computerPlayerButton2.setSelected(true);
        computerPlayerButton2.setText("Racunar");
        computerPlayerButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computerPlayerButton2ActionPerformed(evt);
            }
        });

        player2Group.add(humanPlayerButton2);
        humanPlayerButton2.setText("Covek");
        humanPlayerButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                humanPlayerButton2ActionPerformed(evt);
            }
        });

        difficulty1.setMajorTickSpacing(1);
        difficulty1.setMaximum(3);
        difficulty1.setMinimum(1);
        difficulty1.setMinorTickSpacing(1);
        difficulty1.setValue(1);
        difficulty1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                difficulty1StateChanged(evt);
            }
        });

        difficultyLabel1.setText("EASY");

        difficulty2.setMajorTickSpacing(1);
        difficulty2.setMaximum(3);
        difficulty2.setMinimum(1);
        difficulty2.setMinorTickSpacing(1);
        difficulty2.setValue(1);
        difficulty2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                difficulty2StateChanged(evt);
            }
        });

        difficultyLabel2.setText("EASY");

        jButton1.setText("Dalje");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newGameDialogLayout = new javax.swing.GroupLayout(newGameDialog.getContentPane());
        newGameDialog.getContentPane().setLayout(newGameDialogLayout);
        newGameDialogLayout.setHorizontalGroup(
            newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newGameDialogLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newGameDialogLayout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(newGameDialogLayout.createSequentialGroup()
                        .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newGameDialogLayout.createSequentialGroup()
                                .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(numPiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numDiscs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addGroup(newGameDialogLayout.createSequentialGroup()
                                .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(newGameDialogLayout.createSequentialGroup()
                                        .addComponent(computerPlayerButton2)
                                        .addGap(18, 18, 18)
                                        .addComponent(humanPlayerButton2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(difficulty2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(difficultyLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(newGameDialogLayout.createSequentialGroup()
                                        .addComponent(computerPlayerButton1)
                                        .addGap(18, 18, 18)
                                        .addComponent(humanPlayerButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(difficulty1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(difficultyLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(166, Short.MAX_VALUE))))
        );
        newGameDialogLayout.setVerticalGroup(
            newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newGameDialogLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numPiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numDiscs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newGameDialogLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel6))
                    .addComponent(jLabel5)
                    .addGroup(newGameDialogLayout.createSequentialGroup()
                        .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(computerPlayerButton1)
                                .addComponent(humanPlayerButton1))
                            .addComponent(difficulty1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(difficultyLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(newGameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(computerPlayerButton2)
                                .addComponent(humanPlayerButton2))
                            .addComponent(difficulty2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(difficultyLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pilesDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                pilesDialogWindowClosing(evt);
            }
        });

        jButton3.setText("Dalje");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);

        javax.swing.GroupLayout pilesDialogLayout = new javax.swing.GroupLayout(pilesDialog.getContentPane());
        pilesDialog.getContentPane().setLayout(pilesDialogLayout);
        pilesDialogLayout.setHorizontalGroup(
            pilesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pilesDialogLayout.createSequentialGroup()
                .addComponent(pilesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
        );
        pilesDialogLayout.setVerticalGroup(
            pilesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pilesDialogLayout.createSequentialGroup()
                .addComponent(pilesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
        );

        computerDialog.setMinimumSize(new java.awt.Dimension(354, 248));
        computerDialog.setResizable(false);

        jLabel7.setText("Igrac 1:");

        aiType1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jednostavan igrac", "Alfa beta igrac", "Takmicar" }));
        aiType1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aiType1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Igrac 2:");

        aiType2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jednostavan igrac", "Alfa beta igrac", "Takmicar" }));
        aiType2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aiType2ActionPerformed(evt);
            }
        });

        jButton2.setText("Dalje");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout computerDialogLayout = new javax.swing.GroupLayout(computerDialog.getContentPane());
        computerDialog.getContentPane().setLayout(computerDialogLayout);
        computerDialogLayout.setHorizontalGroup(
            computerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(computerDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(computerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(computerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(aiType1, 0, 200, Short.MAX_VALUE)
                    .addComponent(aiType2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        computerDialogLayout.setVerticalGroup(
            computerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(computerDialogLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(computerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aiType1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(computerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aiType2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        setName("Nim"); // NOI18N
        setResizable(false);
        setTitle("Nim");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        newGame.setText("Nova igra");
        newGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Na potezu:");

        turnLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        btnPanel.setMinimumSize(new java.awt.Dimension(1061, 302));
        btnPanel.setLayout(new java.awt.GridLayout(10, 10, 30, 5));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(turnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 273, Short.MAX_VALUE)
                .addComponent(newGame, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(btnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(btnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newGame, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(turnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void newGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameActionPerformed
        btnPanel.removeAll();
        pilesPanel.removeAll();
        newGameDialog.setVisible(true);
    }//GEN-LAST:event_newGameActionPerformed

    private void numPilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numPilesActionPerformed
        int numPilesSelected =  Integer.parseInt((String) numPiles.getSelectedItem());
        numDiscs.setSelectedItem(Integer.toString(numPilesSelected));
        numberOfPiles = numPilesSelected;
        numberOfDiscs = numPilesSelected;
    }//GEN-LAST:event_numPilesActionPerformed

    private void numDiscsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numDiscsActionPerformed
        int numDiscsSelected = Integer.parseInt((String)numDiscs.getSelectedItem());
        int numPilesSelected = Integer.parseInt((String)numPiles.getSelectedItem());
        numberOfDiscs = numDiscsSelected;
        if (numDiscsSelected < numPilesSelected) {
            JOptionPane.showMessageDialog(null, "Ne mozete imati manje diskova nego sto je stubova.");
            numDiscs.setSelectedItem(Integer.toString(numPilesSelected));
            numberOfDiscs = numPilesSelected;
        }
    }//GEN-LAST:event_numDiscsActionPerformed

    private void difficulty1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_difficulty1StateChanged
        int value = difficulty1.getValue();
        switch (value) {
            case 1:
                difficultyLabel1.setText("EASY");
                difficultyPlayer1 = 3;
                break;
            case 2:
                difficultyLabel1.setText("MEDIUM");
                difficultyPlayer1 = 5;
                break;
            case 3:
                difficultyLabel1.setText("HARD");
                difficultyPlayer1 = 7;
                break;
        }
    }//GEN-LAST:event_difficulty1StateChanged

    private void difficulty2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_difficulty2StateChanged
        int value = difficulty2.getValue();
        switch (value) {
            case 1:
                difficultyLabel2.setText("EASY");
                difficultyPlayer2 = 3;
                break;
            case 2:
                difficultyLabel2.setText("MEDIUM");
                difficultyPlayer2 = 5;
                break;
            case 3:
                difficultyLabel2.setText("HARD");
                difficultyPlayer2 = 7;
        }
    }//GEN-LAST:event_difficulty2StateChanged

    private void computerPlayerButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computerPlayerButton1ActionPerformed
        difficulty1.setEnabled(true);
        int value = difficulty1.getValue();
        switch (value) {
            case 1:
                difficultyLabel1.setText("EASY");
                difficultyPlayer1 = 3;
                break;
            case 2:
                difficultyLabel1.setText("MEDIUM");
                difficultyPlayer1 = 5;
                break;
            case 3:
                difficultyLabel1.setText("HARD");
                difficultyPlayer1 = 7;
                break;
        }
        player1 = playerType.COMPUTER;
    }//GEN-LAST:event_computerPlayerButton1ActionPerformed

    private void humanPlayerButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_humanPlayerButton1ActionPerformed
       difficulty1.setEnabled(false);
       difficultyLabel1.setText("");
       player1 = playerType.HUMAN;
    }//GEN-LAST:event_humanPlayerButton1ActionPerformed

    private void computerPlayerButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computerPlayerButton2ActionPerformed
        difficulty2.setEnabled(true);
        int value = difficulty2.getValue();
        switch (value) {
            case 1:
                difficultyLabel2.setText("EASY");
                difficultyPlayer2 = 3;
                break;
            case 2:
                difficultyLabel2.setText("MEDIUM");
                difficultyPlayer2 = 5;
                break;
            case 3:
                difficultyLabel2.setText("HARD");
                difficultyPlayer2 = 7;
        }
        difficultyLabel2.setVisible(true);
        player2 = playerType.COMPUTER;
    }//GEN-LAST:event_computerPlayerButton2ActionPerformed

    private void humanPlayerButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_humanPlayerButton2ActionPerformed
       difficulty2.setEnabled(false);
       difficultyLabel2.setText("");
       player2 = playerType.HUMAN;
    }//GEN-LAST:event_humanPlayerButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        newGameDialog.setVisible(false);
        piles = new ArrayList<>();
        board = new int[numberOfPiles];
        if (player1 == playerType.COMPUTER || player2 == playerType.COMPUTER) {
            aiType1.setEnabled(player1 == playerType.COMPUTER);
            aiType2.setEnabled(player2 == playerType.COMPUTER);
            computerDialog.setVisible(true);
        }
        else {
            populatePilesDialog();
            pilesDialog.pack();
            pilesDialog.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pilesDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_pilesDialogWindowClosing
        piles.clear();
        pilesPanel.removeAll();
    }//GEN-LAST:event_pilesDialogWindowClosing

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        buttons = new JButton[100];
        int index = 0;
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 10; j++) {
                JButton btn = new JButton();
                btn.setBackground(Color.RED);
                btn.setPreferredSize(new Dimension(80, 30));
                btn.setForeground(Color.RED);
                btn.setText("");
                btn.setVisible(false);
                btn.setName(Integer.toString(index));
                btn.addActionListener(btnListener);
                buttons[index++] = btn;
                btnPanel.add(btn);
            }
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i]; j++) {
                buttons[(90 + i) - 10 * j].setVisible(true);
            }
        }
        btnPanel.validate();
        jPanel1.validate();
        pilesDialog.setVisible(false);
        playGame();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        computerDialog.setVisible(false);
        populatePilesDialog();
        pilesDialog.pack();
        pilesDialog.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void aiType1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aiType1ActionPerformed
        int index = ((JComboBox) evt.getSource()).getSelectedIndex();
        switch (index) {
            case 0:
                igrac1 = new JednostavanIgrac(difficultyPlayer1);
                break;
            case 1:
                igrac1 = new AlfaBetaIgrac(difficultyPlayer1);
                break;
            case 2:
                igrac1 = new Takmicar();
                break;
        }
    }//GEN-LAST:event_aiType1ActionPerformed

    private void aiType2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aiType2ActionPerformed
        int index = ((JComboBox) evt.getSource()).getSelectedIndex();
        switch (index) {
            case 0:
                igrac2 = new JednostavanIgrac(difficultyPlayer2);
                break;
            case 1:
                igrac2 = new AlfaBetaIgrac(difficultyPlayer2);
                break;
            case 2:
                igrac2 = new Takmicar();
                break;
        }
    }//GEN-LAST:event_aiType2ActionPerformed

    private void populatePilesDialog() {
        Integer []numbers = new Integer[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        for (int i = 1; i <= numberOfPiles; i++) {
            JComboBox<Integer> cb = new JComboBox<>(numbers);
            cb.setName(Integer.toString(i));
            cb.setSelectedIndex(i - 1);
            cb.addActionListener(cmbListener);
            piles.add(cb);
            pilesPanel.add(cb);
            board[i - 1] = i;
        }
    }
    
    private void playGame() {
        game = new Game(Arrays.copyOf(board, board.length));
        if (player1 == playerType.COMPUTER && igrac1 == null) {
            igrac1 = new JednostavanIgrac(difficultyPlayer1);
        }
        if (player2 == playerType.COMPUTER && igrac2 == null) {
            igrac2 = new JednostavanIgrac(difficultyPlayer2);
        }
        if (player1 == playerType.COMPUTER && player2 == playerType.COMPUTER) {
            Thread r = new Thread() {
                public void run() {
                    aiVsAi();
                }
            };
            for (int i = 0; i < 100; i++) {
                buttons[i].setEnabled(false);
            }
            r.start();
        }
        else if (player1 == playerType.COMPUTER || player2 == playerType.COMPUTER) {
            Thread r = new Thread() {
                public void run() {
                    humanVsAi();
                }
            };
            r.start();
        }
    }
    
    private void aiVsAi() {
        firstTurn = true;
        turnLabel.setText("Igrac 1");
        while (!game.isOver()) {
            try {
                Thread.sleep(2000);
                Move move;
                if (firstTurn) {
                    move = igrac1.makeMove(game);
                }
                else {
                    move = igrac2.makeMove(game);
                }
                //firstTurn = !firstTurn;
                simulateMove(move);
                //Thread.sleep(500);
                //turnLabel.setText((firstTurn ? "Igrac 1" : "Igrac 2"));
            } catch (InterruptedException ex) {
                Logger.getLogger(Nim.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            Thread.sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(Nim.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void humanVsAi() {
        firstTurn = true;
        final boolean human = (player1 == playerType.HUMAN);
        turnLabel.setText("Igrac 1");
        if (!human) {
            for (int i = 0; i < 100; i++) {
                buttons[i].setEnabled(false);
            }
        }
        while (!game.isOver()) {
            for (int i = 0; i < 100; i++) {
                buttons[i].setEnabled(firstTurn == human);
            }
        }
    }
    
    private void simulateMove(Move move) {
        int index = move.getPos() + 90 - 10 * (game.board[move.getPos()] - move.getNumDiscs());
        buttons[index].setEnabled(true);
        buttons[index].doClick();
        try {
            Thread.sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(Nim.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private class ComboListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            HashSet<Integer> boardSet = new HashSet<>();
            int[] newBoard = new int[board.length];
            boolean valid = true;
            for (JComboBox<Integer> cb : piles) {
                int value = (int) cb.getSelectedItem();
                if (!boardSet.contains(value)) {
                    boardSet.add(value);
                    newBoard[Integer.parseInt(cb.getName()) - 1] = value;
                }
                else {
                    JOptionPane.showMessageDialog(null, "Ne mogu postojati dva stuba sa istim brojem diskova.");
                    JComboBox<Integer> invalid = (JComboBox<Integer>) e.getSource();
                    invalid.setSelectedItem(board[Integer.parseInt(invalid.getName()) - 1]);
                    valid = false;
                    break;
                }
            }
            if (valid) {
                board = Arrays.copyOf(newBoard, newBoard.length);
            }
        }
    }
    
    private class ButtonListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            JButton btn = (JButton) e.getSource();
            int index = Integer.parseInt(btn.getName());
            int pos = index % 10;
            int num = 1;
            index -= 10;
            while (index > 0 && buttons[index].isVisible()) {
                index -= 10;
                num++;
            }
            move = new Move(pos, num);
            if (!game.isValid(move)) {
                JOptionPane.showMessageDialog(null, "Potez nije validan.");
                move = null;
            }
            else {
                int indexColor = Integer.parseInt(btn.getName());
                int indexHide = indexColor;
                while (indexColor >= 0 && buttons[indexColor].isVisible()) {
                    final JButton jbtn = buttons[indexColor];
                    Thread r = new Thread() {
                        public void run() {
                            flashButton(jbtn, Color.YELLOW);
                        }
                    };
                    r.start();
                    indexColor -= 10;
                }
                while (indexHide > 0 && buttons[indexHide].isVisible()) {
                    final JButton jbtn = buttons[indexHide];
                    Thread r = new Thread() {
                        public void run() {
                            hideButton(jbtn);
                        }
                    };
                    r.start();
                    indexHide -= 10;
                }

                firstTurn = !firstTurn;
                String text = (firstTurn ? "Igrac 1" : "Igrac 2");
                Thread t = new Thread() {
                    public void run() {
                        setTurnLabel(text);
                    }
                };
                t.start();
                synchronized(this) {
                    notifyAll();
                }
                game.makeMove(move);
                if (game.isOver()) {
                    Thread r = new Thread() {
                        public void run() {
                            setTurnLabel("");
                        }
                    };
                    r.start();
                    JOptionPane.showMessageDialog(null, "Pobedio je igrac " + (firstTurn ? "2" : "1"));
                }
            }
        }   
    }
    
    private void setTurnLabel(String text) {
        turnLabel.setText(text);
    }
    
    private void hideButton(JButton btn) {
        try {
            Thread.sleep(1500);
        } catch (InterruptedException ex) {
            Logger.getLogger(Nim.class.getName()).log(Level.SEVERE, null, ex);
        }
        btn.setVisible(false);
    }
        
    private void flashButton(JButton btn, Color color) {
        Color origColor = btn.getForeground();
        
        btn.setBackground(color);
        btn.setForeground(color);
        try {
            Thread.sleep(500);
        } catch (InterruptedException ex) {
            Logger.getLogger(Nim.class.getName()).log(Level.SEVERE, null, ex);
        }
        btn.setBackground(origColor);
        btn.setForeground(origColor);
        try {
            Thread.sleep(500);
        } catch (InterruptedException ex) {
            Logger.getLogger(Nim.class.getName()).log(Level.SEVERE, null, ex);
        }
        btn.setBackground(color);
        btn.setForeground(color);
    }
    
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Nim().setVisible(true);
            }
        });
    }
    private enum playerType { COMPUTER, HUMAN };
    private enum difficulty { EASY, MEDIUM, HARD};
    private enum computerType { MINIMAX, ALFABETA, TAKMICAR };
    private int numberOfPiles = 1;
    private int numberOfDiscs = 1;
    private int difficultyPlayer1 = 3;
    private int difficultyPlayer2 = 3;
    private playerType player1 = playerType.COMPUTER;
    private playerType player2 = playerType.COMPUTER;
    private computerType type1 = computerType.MINIMAX;
    private computerType type2 = computerType.MINIMAX;
    private int[] board;
    private List<JComboBox<Integer>> piles;
    private ComboListener cmbListener;
    private JButton[] buttons;
    private ButtonListener btnListener;
    private Game game;
    private Igrac igrac1 = null;
    private Igrac igrac2 = null;
    private Move move;
    private boolean firstTurn = true;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> aiType1;
    private javax.swing.JComboBox<String> aiType2;
    private javax.swing.JPanel btnPanel;
    private javax.swing.JDialog computerDialog;
    private javax.swing.JRadioButton computerPlayerButton1;
    private javax.swing.JRadioButton computerPlayerButton2;
    private javax.swing.JSlider difficulty1;
    private javax.swing.JSlider difficulty2;
    private javax.swing.JLabel difficultyLabel1;
    private javax.swing.JLabel difficultyLabel2;
    private javax.swing.JRadioButton humanPlayerButton1;
    private javax.swing.JRadioButton humanPlayerButton2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton newGame;
    private javax.swing.JDialog newGameDialog;
    private javax.swing.JComboBox<String> numDiscs;
    private javax.swing.JComboBox<String> numPiles;
    private javax.swing.JDialog pilesDialog;
    private javax.swing.JPanel pilesPanel;
    private javax.swing.ButtonGroup player1Group;
    private javax.swing.ButtonGroup player2Group;
    private javax.swing.JLabel turnLabel;
    // End of variables declaration//GEN-END:variables
}